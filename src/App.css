@import url('https://fonts.googleapis.com/css?family=Lora:400,400i,700,700i');
* { box-sizing: border-box }
body, html {
  width: 100%;
  min-height: 100vh;
  padding: 0;
  margin: 0;
  font-family: "Lora", serif;
}

h1, h2, h3, h4 { font-weight: inherit }

@media print {
  html, body { max-width: 210mm ; max-height: 297mm; margin: auto }
}

a:link { color: inherit; text-decoration-skip: spaces ; font-style: italic }
a:visited { color: inherit }

.video-background {
  -webkit-transform-style: preserve-3d;
  z-index: -1;
  object-fit: cover;
  grid-area: header;
  width: 100%;
  height: 100%;
}


.name, .handle { text-transform: lowercase }
.name > * { display: inline-block }

.border-wrapper {
  width: 100%;
  height: 100%;
}



.App, .App.day {
  --fgc: black;
  --bgc: white;
}

.App.night {
  --fgc: white;
  --bgc: black;
}
.App, .Home {
  transition: color, background-color ease-in-out;
  display: grid;
  width: 100%;
  min-height: 100vh;
  color: var(--fgc);
}

.Home > header {
  font-size: 3rem;
  display: grid;
  grid-area: header;
}

.Home > header > * {
  margin: auto;
  background: var(--bgc);
  padding: 1rem;
  z-index: 2;
}

.Home > article {
  grid-area: article;
  background: var(--bgc);
  overflow: auto;
}

@media (orientation: landscape) {
  .Home {
    grid: "header article" 100vh /  1fr 1fr;
  }
}

@media (orientation: portrait) {
  .Home {
    grid: "header" 100vh "article" min-content / 1fr;
  }

  .future * { fill: black; stroke: none }

  .Home > article {
    overflow: initial;
  }
}

.timeline {
  --marker-size: 1px;
  --year-font-size: 200%;
  --month-font-size: 1rem;
  --marker-colour: var(--fgc);
  display: grid;
  grid: auto-flow min-content / auto;
}

.timeline .year {
  display: grid;
  border-top: 1px dotted var(--fgc);
  grid: ". title marker ." min-content / .5rem 1fr 20% .5rem;
  grid-auto-rows: min-content;
}

.timeline .duration { display: none }

.timeline .year::before {
  content: counter(year, upper-roman);
  grid-area: title;
  font-size: var(--year-font-size);
}

.year::after {
  content: attr(data-year);
  grid-area: marker;
  font-size: var(--year-font-size);
  text-align: right;
  /*border-top: var(--marker-size) solid var(--marker-colour); */
}

.year .month {
  display: grid;
  grid: ". title marker" minmax(min-content, 1fr) / 1rem 1fr 10%;
  grid-column: 2 / span 2 ;
}

.month::after {
  grid-area: marker;
  /* border-top: var(--marker-size) solid var(--marker-colour); */
  content: "";
  font-size: var(--month-font-size);
}

.month::before {
  opacity: .5;
  grid-area: title;
  text-transform:lowercase;
}

.month[data-month="0"]::before { content: "Jan" }
.month[data-month="1"]::before { content: "Feb" }
.month[data-month="2"]::before { content: "Mar" }
.month[data-month="3"]::before { content: "Apr" }
.month[data-month="4"]::before { content: "May" }
.month[data-month="5"]::before { content: "Jun" }
.month[data-month="6"]::before { content: "Jul" }
.month[data-month="7"]::before { content: "Aug" }
.month[data-month="8"]::before { content: "Sep" }
.month[data-month="9"]::before { content: "Oct" }
.month[data-month="10"]::before { content: "Nov" }
.month[data-month="11"]::before { content: "Dec" }

.month .event {
  grid-column: 2 ;
  max-width: 30rem;
  padding: 1em 0 1em 3em;
  text-transform: lowercase;
}

.month .event::before {
  content: "– ";
  opacity: .5;
}

.event .description.long { display: none }

.profile {
  display: grid;
  grid: "header" min-content "timeline" 1fr "asterism" 8rem "footer" min-content;
}

.rule{
  display:none;
  grid-area: asterism;
  margin: auto;
  font-size: 150%;
  text-align: center;
  display: grid;
  width: 100%;
  grid: "line-left . text . line-right" min-content / 1fr 2rem min-content 2rem 1fr;
}

.rule > * {
  grid-area:text;
}

.rule:last-of-type::after,
  .rule:last-of-type::before{
  content: "";
  height: 0;
  border-top: 1px dotted black;
  margin: auto;
  width: 100%;
}

.rule::after {
  grid-area: line-left;
}

.rule::before {
  grid-area: line-right;
}

@page {
  size: A4;
  margin: 0;
  marks: none;
}

header.profile {
  display: grid;
  grid: "." 4rem "eye" "." 1rem "text" "." 3rem / 1fr
}

header .text {
  grid-area: text;
  text-align: center;
}

header.profile .text .links {
  margin-top: 1rem;
}

header.profile .name {
  font-size: larger;
}

.text .name {
  display: none;
}

header.profile .sad-icon {
  grid-area: eye;
  margin: auto;
  width: 10em;
}

.text .links {
  max-width: 20rem;
  margin: auto;
  display: flex;
}

.text .links > * { margin: auto }

svg {
  stroke: var(--fgc);
}

.profile footer {
  grid-area: footer;
  display: grid;
  grid: "graph graph graph graph graph" 20rem
        ". left-spacer future right-spacer ." 10rem
        "tagline tagline tagline tagline tagline" min-content
        ". . . . ." 4rem / 1fr 2rem 4rem 2rem 1fr
}

footer .graph {
  grid-area:graph;
}

footer .graph * { stroke: none }
footer .graph .event:hover { fill: grey }

.profile footer .future{ grid-area:future; width: 100%; height: 100% }

.profile footer::before { content:"–"; grid-area:left-spacer; margin:auto; opacity: .5 }
.profile footer::after { content:"–"; grid-area: right-spacer; margin: auto; opacity: .5 }

.title { grid-area: title }
.title > * + *::before { content: ", " }
.duration { grid-area: duration }
.description { grid-area: description }

.tagline { grid-area: tagline; text-align: center; opacity: .5; display: none }

.CV .timeline .duration { display: block }
.CV .timeline { --year-font-size: 100% }
.CV { width: 100%; height: 100%; max-width: 210mm; height: 297mm; margin: auto ; overflow: hidden }
.CV header.profile .name { display: block }
.CV header.profile {  grid: "." 2rem "eye" "." 1rem "text" "." 1rem /1fr }
.CV .month .event { padding: .5em 0 .5em 3em }
.work.timeline .month::before { content: ""; }

/*.CV a:link::before{ content: attr(href) ; text-transform: initial ; grid-area: href }*/
.CV { font-size: 80%; box-sizing: border-box; padding-top: 4mm }
.CV .timeline, .CV p { max-width: 30rem; margin: 0 auto 1rem auto }
.CV .timeline .year { margin-bottom: 1em; border-top: 0 }
.CV .event .title > * { display: block }
.CV .event .title > *::before { content: initial }
.work.timeline a:link { text-decoration: inherit; font-style: inherit }
.work.timeline .year::before,
.work.timeline .year::after { }
.work.timeline .event::before { content: "" }
.work.timeline .title { display: block; text-transform: capitalize }
.work.timeline .description.long { display: initial }
.work.timeline .description.long ~ .description { display: none }
.work.timeline .event + .event { margin-top: 1em }
.work.timeline .work.event { display: grid; grid:
  "title ."
  ". ." .4em
  "duration ."
  ". ." .8em
  "description description" / 80% 1fr }
